- mongodb = database - nosql database
- more traditional database = relational
- mongo - each database can contain 1 or more collections (tables)
- each collection can contain one or more data structures - documents (rows)
- each document contains information about one single entity, for example 
one blog post, one review, one user etc
- collection is like the parents structure containing all the documents
- document has a data format that looks a lot like json. 

MongoBD = document database with the scalibility and flexibility
that you want with the querying and indexing you need

MongoDB:
- document based - stores data in document (field value pair data structures, NoSQL)
- scalable - very easy to distribute data across multiple machines as your users 
and amount of data grows
- flexible - no document data schema required, so each document can have different 
number and type of field
- performant - embedded data models, indexing, sharding, flexible documents, native 
duplication etc.
- free and open source published under the SSPL License 

document structure - BSON - data format MongoDB uses for data storage. Like JSON, but 
typed so mongoDB documents are typed.

typed means all data values will have a type such as string, boolean, date etc.

just like with json - BSON - data will have fields and be stored in key value pairs.

mongo - can have multiple values in one field unlike traditional relational databases.

embedding - including related data into a single document. Quicker access and easier data
models. 

opposite to embedding is normalising - not possible to embed in relational databases
datas can be related by joining with references to id fields

bson max size 16mb 
each document has an automatically generated unique id. 
